/* eslint-disable @next/next/no-page-custom-font */
import App from 'next/app';
import Head from 'next/head';
import Router from 'next/router';

import { useEffect, useState } from 'react';

import {Provider} from 'react-redux';

import { Navbar, Footer } from '../components';
import Loader from '../components/UIs/Loader/Loader';

import ThemeContextProvider from '../theme/theme';
// STORE STUFF
import { wrapper } from '../store/store';

import { ToastContainer } from "react-toastify";

// TRANSLATION STUFF
import { appWithTranslation } from "next-i18next";

import Cookies from 'universal-cookie';
const cookie = new Cookies();

import "react-toastify/dist/ReactToastify.css";
import "react-modal-video/scss/modal-video.scss";
import '../public/css/all.min.css';
import '../styles/globals.scss';
import '../styles/variables.scss';

const MyApp = ({Component, ...rest}) => {
  const {store, props} = wrapper.useWrappedStore(rest);

  const [showLoader, setShowLoader] = useState(false);
  const [scrollY, setScrollY] = useState(0);

  useEffect(() => {
    if (!cookie.get('GridsAppsLang')) {
      cookie.set('GridsAppsLang', 'en', {path: "/"})
    }
  }, [])

  useEffect(() => {
    const handleScroll = () => {
      setScrollY(document.body.scrollTop)
    };
    handleScroll();
    document.body.addEventListener("scroll", handleScroll);
  }, [])

  useEffect(() => {
    Router.events.on('routeChangeStart', () => {
      setShowLoader(true)
      document.body.scrollTo(0, 0);
    })

    Router.events.on('routeChangeComplete', () => {
      setShowLoader(false)
    })
  }, [])

  const gotToTop = () => {
    document.body.scrollTo(0, 0);
  }

  return (
    <div id={rest.pageProps.locale}>
      <Provider store={store}>
        <ThemeContextProvider>

          <Head>
            <title>Grids Apps</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/imgs/navbar/favicon.png" />
            <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@300;400;500;700;800;900&display=swap" rel="stylesheet"></link>
          </Head>
          {/* TOASTFY COMPONENT */}
          <ToastContainer
            position={rest.pageProps.locale === "ar" ? "top-left" : "top-right"}
            autoClose={5000}
            hideProgressBar={false}
            newestOnTop={false}
            closeOnClick
            rtl={rest.pageProps.locale === "ar" ? true : false}
            pauseOnHover
          />

          <Navbar />

          <Component {...props.pageProps} />

          {showLoader && <Loader />}

          <div className={`${rest.pageProps.locale} ${scrollY >= 500 ? 'showing' : 'hiding'} goUp`} onClick={gotToTop}>
            <i className="fa-light fa-up"></i>
          </div>

          <Footer />

        </ThemeContextProvider>
      </Provider>
    </div>
  );
};

MyApp.getInitialProps = wrapper.getInitialPageProps(store => ({pathname, req, res}) => {
  // console.log(store.getState().user.user)
  return {
    
  }
});

export default wrapper.withRedux(appWithTranslation(MyApp));





// class MyApp extends App {

//   static getInitialProps = wrapper.getInitialAppProps(store => async context => {
//       return {
//         ...(await App.getInitialProps(context)).pageProps,
//         locale: context.ctx.locale
//       };
//   });

//   state = {
//     showLoader: false,
//     scrollY: 0
//   }

//   gotToTop = () => {
//     document.body.scrollTo(0, 0);
//   }

//   componentDidMount() {
//     if (!cookie.get('GridsAppsLang')) {
//       cookie.set('GridsAppsLang', 'en', {path: "/"})
//     }

//     Router.events.on('routeChangeStart', () => {
//       this.setState({
//         showLoader: true
//       })
//       document.body.scrollTo(0, 0);
//     })

//     Router.events.on('routeChangeComplete', () => {
//       this.setState({
//         showLoader: false
//       })
//     })

//     const handleScroll = () => {
//       this.setState({
//         scrollY: document.body.scrollTop
//       })
//     };
//     handleScroll();
//     document.body.addEventListener("scroll", handleScroll);
//   }

//   render() {
//       const {Component, pageProps, locale} = this.props;

//       return (
//         <div id={locale}>
//           <ThemeContextProvider>
//             <Head>
//               <title>Grids Apps</title>
//               <meta name="description" content="Generated by create next app" />
//               <link rel="icon" href="/imgs/navbar/favicon.png" />
//               <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@300;400;500;700;800;900&display=swap" rel="stylesheet"></link>
//             </Head>
//             {/* TOASTFY COMPONENT */}
//             <ToastContainer
//               position={locale === "ar" ? "top-left" : "top-right"}
//               autoClose={5000}
//               hideProgressBar={false}
//               newestOnTop={false}
//               closeOnClick
//               rtl={locale === "ar" ? true : false}
//               pauseOnHover
//             />
//             <Navbar />

//             <Component {...pageProps} />

//             {this.state.showLoader && <Loader />}
//             <div className={`${locale} ${this.state.scrollY >= 500 ? 'showing' : 'hiding'} goUp`} onClick={this.gotToTop}>
//               <i className="fa-light fa-up"></i>
//             </div>
//             <Footer />
//           </ThemeContextProvider>
//         </div>
//       );
//   }
// }

// export default wrapper.withRedux(appWithTranslation(MyApp));
